// Code generated by protoc-gen-go. DO NOT EDIT.
// source: snakeAndLadder/api/service.proto

package snakeAndLadder

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NewGame struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewGame) Reset()         { *m = NewGame{} }
func (m *NewGame) String() string { return proto.CompactTextString(m) }
func (*NewGame) ProtoMessage()    {}
func (*NewGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_781c45c22dd44edd, []int{0}
}

func (m *NewGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewGame.Unmarshal(m, b)
}
func (m *NewGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewGame.Marshal(b, m, deterministic)
}
func (m *NewGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewGame.Merge(m, src)
}
func (m *NewGame) XXX_Size() int {
	return xxx_messageInfo_NewGame.Size(m)
}
func (m *NewGame) XXX_DiscardUnknown() {
	xxx_messageInfo_NewGame.DiscardUnknown(m)
}

var xxx_messageInfo_NewGame proto.InternalMessageInfo

type NewGame_Req struct {
	Visitor              *Visitor     `protobuf:"bytes,1,opt,name=visitor,proto3" json:"visitor,omitempty"`
	GameSetting          *GameSetting `protobuf:"bytes,2,opt,name=game_setting,json=gameSetting,proto3" json:"game_setting,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *NewGame_Req) Reset()         { *m = NewGame_Req{} }
func (m *NewGame_Req) String() string { return proto.CompactTextString(m) }
func (*NewGame_Req) ProtoMessage()    {}
func (*NewGame_Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_781c45c22dd44edd, []int{0, 0}
}

func (m *NewGame_Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewGame_Req.Unmarshal(m, b)
}
func (m *NewGame_Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewGame_Req.Marshal(b, m, deterministic)
}
func (m *NewGame_Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewGame_Req.Merge(m, src)
}
func (m *NewGame_Req) XXX_Size() int {
	return xxx_messageInfo_NewGame_Req.Size(m)
}
func (m *NewGame_Req) XXX_DiscardUnknown() {
	xxx_messageInfo_NewGame_Req.DiscardUnknown(m)
}

var xxx_messageInfo_NewGame_Req proto.InternalMessageInfo

func (m *NewGame_Req) GetVisitor() *Visitor {
	if m != nil {
		return m.Visitor
	}
	return nil
}

func (m *NewGame_Req) GetGameSetting() *GameSetting {
	if m != nil {
		return m.GameSetting
	}
	return nil
}

type NewGame_Resp struct {
	Status               *Status   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	GameId               string    `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	GameMeta             *GameMeta `protobuf:"bytes,3,opt,name=game_meta,json=gameMeta,proto3" json:"game_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *NewGame_Resp) Reset()         { *m = NewGame_Resp{} }
func (m *NewGame_Resp) String() string { return proto.CompactTextString(m) }
func (*NewGame_Resp) ProtoMessage()    {}
func (*NewGame_Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_781c45c22dd44edd, []int{0, 1}
}

func (m *NewGame_Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewGame_Resp.Unmarshal(m, b)
}
func (m *NewGame_Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewGame_Resp.Marshal(b, m, deterministic)
}
func (m *NewGame_Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewGame_Resp.Merge(m, src)
}
func (m *NewGame_Resp) XXX_Size() int {
	return xxx_messageInfo_NewGame_Resp.Size(m)
}
func (m *NewGame_Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_NewGame_Resp.DiscardUnknown(m)
}

var xxx_messageInfo_NewGame_Resp proto.InternalMessageInfo

func (m *NewGame_Resp) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *NewGame_Resp) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *NewGame_Resp) GetGameMeta() *GameMeta {
	if m != nil {
		return m.GameMeta
	}
	return nil
}

type EndGame struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndGame) Reset()         { *m = EndGame{} }
func (m *EndGame) String() string { return proto.CompactTextString(m) }
func (*EndGame) ProtoMessage()    {}
func (*EndGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_781c45c22dd44edd, []int{1}
}

func (m *EndGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndGame.Unmarshal(m, b)
}
func (m *EndGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndGame.Marshal(b, m, deterministic)
}
func (m *EndGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndGame.Merge(m, src)
}
func (m *EndGame) XXX_Size() int {
	return xxx_messageInfo_EndGame.Size(m)
}
func (m *EndGame) XXX_DiscardUnknown() {
	xxx_messageInfo_EndGame.DiscardUnknown(m)
}

var xxx_messageInfo_EndGame proto.InternalMessageInfo

type EndGame_Req struct {
	Visitor              *Visitor `protobuf:"bytes,1,opt,name=visitor,proto3" json:"visitor,omitempty"`
	GameId               string   `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndGame_Req) Reset()         { *m = EndGame_Req{} }
func (m *EndGame_Req) String() string { return proto.CompactTextString(m) }
func (*EndGame_Req) ProtoMessage()    {}
func (*EndGame_Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_781c45c22dd44edd, []int{1, 0}
}

func (m *EndGame_Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndGame_Req.Unmarshal(m, b)
}
func (m *EndGame_Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndGame_Req.Marshal(b, m, deterministic)
}
func (m *EndGame_Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndGame_Req.Merge(m, src)
}
func (m *EndGame_Req) XXX_Size() int {
	return xxx_messageInfo_EndGame_Req.Size(m)
}
func (m *EndGame_Req) XXX_DiscardUnknown() {
	xxx_messageInfo_EndGame_Req.DiscardUnknown(m)
}

var xxx_messageInfo_EndGame_Req proto.InternalMessageInfo

func (m *EndGame_Req) GetVisitor() *Visitor {
	if m != nil {
		return m.Visitor
	}
	return nil
}

func (m *EndGame_Req) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

type EndGame_Resp struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndGame_Resp) Reset()         { *m = EndGame_Resp{} }
func (m *EndGame_Resp) String() string { return proto.CompactTextString(m) }
func (*EndGame_Resp) ProtoMessage()    {}
func (*EndGame_Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_781c45c22dd44edd, []int{1, 1}
}

func (m *EndGame_Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndGame_Resp.Unmarshal(m, b)
}
func (m *EndGame_Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndGame_Resp.Marshal(b, m, deterministic)
}
func (m *EndGame_Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndGame_Resp.Merge(m, src)
}
func (m *EndGame_Resp) XXX_Size() int {
	return xxx_messageInfo_EndGame_Resp.Size(m)
}
func (m *EndGame_Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_EndGame_Resp.DiscardUnknown(m)
}

var xxx_messageInfo_EndGame_Resp proto.InternalMessageInfo

func (m *EndGame_Resp) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type MoveForward struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveForward) Reset()         { *m = MoveForward{} }
func (m *MoveForward) String() string { return proto.CompactTextString(m) }
func (*MoveForward) ProtoMessage()    {}
func (*MoveForward) Descriptor() ([]byte, []int) {
	return fileDescriptor_781c45c22dd44edd, []int{2}
}

func (m *MoveForward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveForward.Unmarshal(m, b)
}
func (m *MoveForward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveForward.Marshal(b, m, deterministic)
}
func (m *MoveForward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveForward.Merge(m, src)
}
func (m *MoveForward) XXX_Size() int {
	return xxx_messageInfo_MoveForward.Size(m)
}
func (m *MoveForward) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveForward.DiscardUnknown(m)
}

var xxx_messageInfo_MoveForward proto.InternalMessageInfo

type MoveForward_Req struct {
	Visitor              *Visitor `protobuf:"bytes,1,opt,name=visitor,proto3" json:"visitor,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GameId               string   `protobuf:"bytes,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveForward_Req) Reset()         { *m = MoveForward_Req{} }
func (m *MoveForward_Req) String() string { return proto.CompactTextString(m) }
func (*MoveForward_Req) ProtoMessage()    {}
func (*MoveForward_Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_781c45c22dd44edd, []int{2, 0}
}

func (m *MoveForward_Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveForward_Req.Unmarshal(m, b)
}
func (m *MoveForward_Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveForward_Req.Marshal(b, m, deterministic)
}
func (m *MoveForward_Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveForward_Req.Merge(m, src)
}
func (m *MoveForward_Req) XXX_Size() int {
	return xxx_messageInfo_MoveForward_Req.Size(m)
}
func (m *MoveForward_Req) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveForward_Req.DiscardUnknown(m)
}

var xxx_messageInfo_MoveForward_Req proto.InternalMessageInfo

func (m *MoveForward_Req) GetVisitor() *Visitor {
	if m != nil {
		return m.Visitor
	}
	return nil
}

func (m *MoveForward_Req) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *MoveForward_Req) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

type MoveForward_Resp struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Step                 int32    `protobuf:"varint,2,opt,name=step,proto3" json:"step,omitempty"`
	Position             int32    `protobuf:"varint,3,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveForward_Resp) Reset()         { *m = MoveForward_Resp{} }
func (m *MoveForward_Resp) String() string { return proto.CompactTextString(m) }
func (*MoveForward_Resp) ProtoMessage()    {}
func (*MoveForward_Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_781c45c22dd44edd, []int{2, 1}
}

func (m *MoveForward_Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveForward_Resp.Unmarshal(m, b)
}
func (m *MoveForward_Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveForward_Resp.Marshal(b, m, deterministic)
}
func (m *MoveForward_Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveForward_Resp.Merge(m, src)
}
func (m *MoveForward_Resp) XXX_Size() int {
	return xxx_messageInfo_MoveForward_Resp.Size(m)
}
func (m *MoveForward_Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveForward_Resp.DiscardUnknown(m)
}

var xxx_messageInfo_MoveForward_Resp proto.InternalMessageInfo

func (m *MoveForward_Resp) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *MoveForward_Resp) GetStep() int32 {
	if m != nil {
		return m.Step
	}
	return 0
}

func (m *MoveForward_Resp) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

type FetchReplay struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchReplay) Reset()         { *m = FetchReplay{} }
func (m *FetchReplay) String() string { return proto.CompactTextString(m) }
func (*FetchReplay) ProtoMessage()    {}
func (*FetchReplay) Descriptor() ([]byte, []int) {
	return fileDescriptor_781c45c22dd44edd, []int{3}
}

func (m *FetchReplay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchReplay.Unmarshal(m, b)
}
func (m *FetchReplay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchReplay.Marshal(b, m, deterministic)
}
func (m *FetchReplay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchReplay.Merge(m, src)
}
func (m *FetchReplay) XXX_Size() int {
	return xxx_messageInfo_FetchReplay.Size(m)
}
func (m *FetchReplay) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchReplay.DiscardUnknown(m)
}

var xxx_messageInfo_FetchReplay proto.InternalMessageInfo

type FetchReplay_Req struct {
	GameId               string   `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchReplay_Req) Reset()         { *m = FetchReplay_Req{} }
func (m *FetchReplay_Req) String() string { return proto.CompactTextString(m) }
func (*FetchReplay_Req) ProtoMessage()    {}
func (*FetchReplay_Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_781c45c22dd44edd, []int{3, 0}
}

func (m *FetchReplay_Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchReplay_Req.Unmarshal(m, b)
}
func (m *FetchReplay_Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchReplay_Req.Marshal(b, m, deterministic)
}
func (m *FetchReplay_Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchReplay_Req.Merge(m, src)
}
func (m *FetchReplay_Req) XXX_Size() int {
	return xxx_messageInfo_FetchReplay_Req.Size(m)
}
func (m *FetchReplay_Req) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchReplay_Req.DiscardUnknown(m)
}

var xxx_messageInfo_FetchReplay_Req proto.InternalMessageInfo

func (m *FetchReplay_Req) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

type FetchReplay_Resp struct {
	Status               *Status       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	UserIds              []string      `protobuf:"bytes,2,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	UserRecords          []*UserRecord `protobuf:"bytes,3,rep,name=user_records,json=userRecords,proto3" json:"user_records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FetchReplay_Resp) Reset()         { *m = FetchReplay_Resp{} }
func (m *FetchReplay_Resp) String() string { return proto.CompactTextString(m) }
func (*FetchReplay_Resp) ProtoMessage()    {}
func (*FetchReplay_Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_781c45c22dd44edd, []int{3, 1}
}

func (m *FetchReplay_Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchReplay_Resp.Unmarshal(m, b)
}
func (m *FetchReplay_Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchReplay_Resp.Marshal(b, m, deterministic)
}
func (m *FetchReplay_Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchReplay_Resp.Merge(m, src)
}
func (m *FetchReplay_Resp) XXX_Size() int {
	return xxx_messageInfo_FetchReplay_Resp.Size(m)
}
func (m *FetchReplay_Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchReplay_Resp.DiscardUnknown(m)
}

var xxx_messageInfo_FetchReplay_Resp proto.InternalMessageInfo

func (m *FetchReplay_Resp) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *FetchReplay_Resp) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

func (m *FetchReplay_Resp) GetUserRecords() []*UserRecord {
	if m != nil {
		return m.UserRecords
	}
	return nil
}

func init() {
	proto.RegisterType((*NewGame)(nil), "api.snakeAndLadder.NewGame")
	proto.RegisterType((*NewGame_Req)(nil), "api.snakeAndLadder.NewGame.Req")
	proto.RegisterType((*NewGame_Resp)(nil), "api.snakeAndLadder.NewGame.Resp")
	proto.RegisterType((*EndGame)(nil), "api.snakeAndLadder.EndGame")
	proto.RegisterType((*EndGame_Req)(nil), "api.snakeAndLadder.EndGame.Req")
	proto.RegisterType((*EndGame_Resp)(nil), "api.snakeAndLadder.EndGame.Resp")
	proto.RegisterType((*MoveForward)(nil), "api.snakeAndLadder.MoveForward")
	proto.RegisterType((*MoveForward_Req)(nil), "api.snakeAndLadder.MoveForward.Req")
	proto.RegisterType((*MoveForward_Resp)(nil), "api.snakeAndLadder.MoveForward.Resp")
	proto.RegisterType((*FetchReplay)(nil), "api.snakeAndLadder.FetchReplay")
	proto.RegisterType((*FetchReplay_Req)(nil), "api.snakeAndLadder.FetchReplay.Req")
	proto.RegisterType((*FetchReplay_Resp)(nil), "api.snakeAndLadder.FetchReplay.Resp")
}

func init() {
	proto.RegisterFile("snakeAndLadder/api/service.proto", fileDescriptor_781c45c22dd44edd)
}

var fileDescriptor_781c45c22dd44edd = []byte{
	// 473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0x71, 0xdc, 0xc6, 0xc9, 0xb8, 0xaa, 0xd0, 0x5e, 0x30, 0x0b, 0x14, 0xcb, 0x70, 0xc8,
	0xc9, 0x95, 0x82, 0x38, 0xc0, 0xad, 0x95, 0x28, 0xaa, 0x44, 0x7b, 0xd8, 0xa8, 0x1c, 0x7a, 0x41,
	0x4b, 0x76, 0x14, 0x16, 0x1a, 0xdb, 0xdd, 0xd9, 0xa4, 0xe2, 0xc6, 0x13, 0x70, 0xe6, 0x00, 0xef,
	0xc3, 0xa3, 0xc0, 0x5b, 0x20, 0xaf, 0xdd, 0xd4, 0x16, 0x0e, 0x48, 0xcd, 0x6d, 0x47, 0xf3, 0xcd,
	0x3f, 0xbf, 0x67, 0x67, 0x0d, 0x31, 0x65, 0xf2, 0x13, 0x1e, 0x64, 0xea, 0x8d, 0x54, 0x0a, 0xcd,
	0xbe, 0x2c, 0xf4, 0x3e, 0xa1, 0x59, 0xea, 0x29, 0xa6, 0x85, 0xc9, 0x6d, 0xce, 0x98, 0x2c, 0x74,
	0xda, 0xa6, 0xf8, 0xa3, 0x8e, 0xaa, 0x85, 0xd5, 0x17, 0x55, 0x49, 0xf2, 0xa3, 0x07, 0xc1, 0x29,
	0x5e, 0xbd, 0x96, 0x73, 0xe4, 0x5f, 0x3c, 0xf0, 0x05, 0x5e, 0xb2, 0xe7, 0x10, 0x2c, 0x35, 0x69,
	0x9b, 0x9b, 0xc8, 0x8b, 0xbd, 0x51, 0x38, 0x7e, 0x90, 0xfe, 0x2d, 0x9c, 0xbe, 0xad, 0x10, 0x71,
	0xcd, 0xb2, 0x43, 0xd8, 0x99, 0xc9, 0x39, 0xbe, 0x23, 0xb4, 0x56, 0x67, 0xb3, 0xa8, 0xe7, 0x6a,
	0x1f, 0x77, 0xd5, 0x96, 0xed, 0x26, 0x15, 0x26, 0xc2, 0xd9, 0x4d, 0xc0, 0xbf, 0x7a, 0xb0, 0x25,
	0x90, 0x0a, 0x36, 0x86, 0x3e, 0x59, 0x69, 0x17, 0x54, 0x5b, 0xe0, 0x5d, 0x32, 0x13, 0x47, 0x88,
	0x9a, 0x64, 0xf7, 0x20, 0x70, 0x06, 0xb4, 0x72, 0xbd, 0x87, 0xa2, 0x5f, 0x86, 0xc7, 0x8a, 0xbd,
	0x80, 0xa1, 0x4b, 0xcc, 0xd1, 0xca, 0xc8, 0x77, 0x7a, 0x0f, 0xd7, 0xd9, 0x3a, 0x41, 0x2b, 0xc5,
	0x60, 0x56, 0x9f, 0x92, 0xef, 0x1e, 0x04, 0xaf, 0x32, 0xe5, 0xe6, 0x73, 0xb6, 0xd1, 0x78, 0xd6,
	0xb9, 0xe3, 0x2f, 0x6f, 0xff, 0xc9, 0xc9, 0x6f, 0x0f, 0xc2, 0x93, 0x7c, 0x89, 0x47, 0xb9, 0xb9,
	0x92, 0x46, 0xf1, 0x6c, 0x53, 0x8b, 0x0b, 0x42, 0xd3, 0xb0, 0x58, 0x86, 0xc7, 0xaa, 0xe9, 0xdd,
	0x6f, 0x79, 0xff, 0xb8, 0xc1, 0x75, 0x31, 0xd8, 0x22, 0x8b, 0x85, 0x6b, 0xb5, 0x2d, 0xdc, 0x99,
	0x71, 0x18, 0x14, 0x39, 0x69, 0xab, 0xf3, 0xcc, 0x75, 0xda, 0x16, 0xab, 0x38, 0xf9, 0xe9, 0x41,
	0x78, 0x84, 0x76, 0xfa, 0x41, 0x60, 0x71, 0x21, 0x3f, 0xf3, 0xbd, 0xea, 0x5b, 0x1b, 0xde, 0xbc,
	0x96, 0xb7, 0x6f, 0x9b, 0xec, 0xd2, 0x7d, 0x18, 0xd4, 0xa3, 0xa0, 0xa8, 0x17, 0xfb, 0xa3, 0xa1,
	0x08, 0xaa, 0x59, 0x10, 0x3b, 0x80, 0x1d, 0x97, 0x32, 0x38, 0xcd, 0x8d, 0xa2, 0xc8, 0x8f, 0xfd,
	0x51, 0x38, 0xde, 0xeb, 0x12, 0x3d, 0x23, 0x34, 0xc2, 0x61, 0x22, 0x5c, 0xac, 0xce, 0x34, 0xfe,
	0xd5, 0x83, 0xdd, 0x49, 0x0b, 0x65, 0xa7, 0xab, 0x77, 0xc8, 0x3a, 0x9f, 0x4c, 0x9d, 0x4c, 0x05,
	0x5e, 0xf2, 0xf8, 0xdf, 0x00, 0x15, 0xc9, 0x9d, 0x52, 0xaf, 0xde, 0xdb, 0x6e, 0xbd, 0x3a, 0xb9,
	0x5e, 0xef, 0x06, 0x70, 0x7a, 0xe7, 0xad, 0x45, 0x63, 0x4f, 0xba, 0x4a, 0x1a, 0x80, 0xd3, 0x7d,
	0xfa, 0x7f, 0xe8, 0x5a, 0xbb, 0x71, 0xb1, 0xdd, 0xda, 0x0d, 0x60, 0xbd, 0x76, 0x1b, 0x2a, 0xb5,
	0x0f, 0xef, 0x9e, 0xef, 0xb6, 0xa1, 0xf7, 0x7d, 0xf7, 0xe7, 0x7b, 0xf6, 0x27, 0x00, 0x00, 0xff,
	0xff, 0x8f, 0xea, 0x0f, 0x00, 0x50, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SnakeAndLadderClient is the client API for SnakeAndLadder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SnakeAndLadderClient interface {
	NewGame(ctx context.Context, in *NewGame_Req, opts ...grpc.CallOption) (*NewGame_Resp, error)
	EndGame(ctx context.Context, in *EndGame_Req, opts ...grpc.CallOption) (*EndGame_Resp, error)
	MoveForward(ctx context.Context, in *MoveForward_Req, opts ...grpc.CallOption) (*MoveForward_Resp, error)
	FetchReplay(ctx context.Context, in *FetchReplay_Req, opts ...grpc.CallOption) (*FetchReplay_Resp, error)
}

type snakeAndLadderClient struct {
	cc grpc.ClientConnInterface
}

func NewSnakeAndLadderClient(cc grpc.ClientConnInterface) SnakeAndLadderClient {
	return &snakeAndLadderClient{cc}
}

func (c *snakeAndLadderClient) NewGame(ctx context.Context, in *NewGame_Req, opts ...grpc.CallOption) (*NewGame_Resp, error) {
	out := new(NewGame_Resp)
	err := c.cc.Invoke(ctx, "/api.snakeAndLadder.SnakeAndLadder/NewGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snakeAndLadderClient) EndGame(ctx context.Context, in *EndGame_Req, opts ...grpc.CallOption) (*EndGame_Resp, error) {
	out := new(EndGame_Resp)
	err := c.cc.Invoke(ctx, "/api.snakeAndLadder.SnakeAndLadder/EndGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snakeAndLadderClient) MoveForward(ctx context.Context, in *MoveForward_Req, opts ...grpc.CallOption) (*MoveForward_Resp, error) {
	out := new(MoveForward_Resp)
	err := c.cc.Invoke(ctx, "/api.snakeAndLadder.SnakeAndLadder/MoveForward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snakeAndLadderClient) FetchReplay(ctx context.Context, in *FetchReplay_Req, opts ...grpc.CallOption) (*FetchReplay_Resp, error) {
	out := new(FetchReplay_Resp)
	err := c.cc.Invoke(ctx, "/api.snakeAndLadder.SnakeAndLadder/FetchReplay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SnakeAndLadderServer is the server API for SnakeAndLadder service.
type SnakeAndLadderServer interface {
	NewGame(context.Context, *NewGame_Req) (*NewGame_Resp, error)
	EndGame(context.Context, *EndGame_Req) (*EndGame_Resp, error)
	MoveForward(context.Context, *MoveForward_Req) (*MoveForward_Resp, error)
	FetchReplay(context.Context, *FetchReplay_Req) (*FetchReplay_Resp, error)
}

// UnimplementedSnakeAndLadderServer can be embedded to have forward compatible implementations.
type UnimplementedSnakeAndLadderServer struct {
}

func (*UnimplementedSnakeAndLadderServer) NewGame(ctx context.Context, req *NewGame_Req) (*NewGame_Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewGame not implemented")
}
func (*UnimplementedSnakeAndLadderServer) EndGame(ctx context.Context, req *EndGame_Req) (*EndGame_Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EndGame not implemented")
}
func (*UnimplementedSnakeAndLadderServer) MoveForward(ctx context.Context, req *MoveForward_Req) (*MoveForward_Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveForward not implemented")
}
func (*UnimplementedSnakeAndLadderServer) FetchReplay(ctx context.Context, req *FetchReplay_Req) (*FetchReplay_Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchReplay not implemented")
}

func RegisterSnakeAndLadderServer(s *grpc.Server, srv SnakeAndLadderServer) {
	s.RegisterService(&_SnakeAndLadder_serviceDesc, srv)
}

func _SnakeAndLadder_NewGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewGame_Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnakeAndLadderServer).NewGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.snakeAndLadder.SnakeAndLadder/NewGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnakeAndLadderServer).NewGame(ctx, req.(*NewGame_Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnakeAndLadder_EndGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndGame_Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnakeAndLadderServer).EndGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.snakeAndLadder.SnakeAndLadder/EndGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnakeAndLadderServer).EndGame(ctx, req.(*EndGame_Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnakeAndLadder_MoveForward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveForward_Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnakeAndLadderServer).MoveForward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.snakeAndLadder.SnakeAndLadder/MoveForward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnakeAndLadderServer).MoveForward(ctx, req.(*MoveForward_Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnakeAndLadder_FetchReplay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchReplay_Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnakeAndLadderServer).FetchReplay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.snakeAndLadder.SnakeAndLadder/FetchReplay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnakeAndLadderServer).FetchReplay(ctx, req.(*FetchReplay_Req))
	}
	return interceptor(ctx, in, info, handler)
}

var _SnakeAndLadder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.snakeAndLadder.SnakeAndLadder",
	HandlerType: (*SnakeAndLadderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewGame",
			Handler:    _SnakeAndLadder_NewGame_Handler,
		},
		{
			MethodName: "EndGame",
			Handler:    _SnakeAndLadder_EndGame_Handler,
		},
		{
			MethodName: "MoveForward",
			Handler:    _SnakeAndLadder_MoveForward_Handler,
		},
		{
			MethodName: "FetchReplay",
			Handler:    _SnakeAndLadder_FetchReplay_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "snakeAndLadder/api/service.proto",
}
